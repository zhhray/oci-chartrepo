---
swagger: "2.0"
info:
  description: "These APIs provide services for manipulating Harbor project."
  version: "2.0"
  title: "Harbor API"
host: "localhost"
basePath: "/api/v2.0"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
security:
- basic: []
- {}
paths:
  /projects:
    get:
      tags:
      - "project"
      summary: "List projects"
      description: "This endpoint returns projects created by Harbor."
      operationId: "listProjects"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "The page number"
        required: false
        type: "integer"
        default: 1
        format: "int64"
        x-exportParamName: "Page"
        x-optionalDataType: "Int64"
      - name: "page_size"
        in: "query"
        description: "The size of per page"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        format: "int64"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int64"
      - name: "name"
        in: "query"
        description: "The name of project."
        required: false
        type: "string"
        x-exportParamName: "Name"
        x-optionalDataType: "String"
      - name: "public"
        in: "query"
        description: "The project is public or private."
        required: false
        type: "boolean"
        format: "int32"
        x-exportParamName: "Public"
        x-optionalDataType: "Bool"
      - name: "owner"
        in: "query"
        description: "The name of project owner."
        required: false
        type: "string"
        x-exportParamName: "Owner"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Return all matched projects."
          headers:
            X-Total-Count:
              type: "integer"
              description: "The total count of projects"
            Link:
              type: "string"
              description: "Link refers to the previous page and next page"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    head:
      tags:
      - "project"
      summary: "Check if the project name user provided already exists."
      description: "This endpoint is used to check if the project name provided already\
        \ exist."
      operationId: "headProject"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "query"
        description: "Project name for checking exists."
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      responses:
        "200":
          description: "Success"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    post:
      tags:
      - "project"
      summary: "Create a new project."
      description: "This endpoint is for user to create a new project."
      operationId: "createProject"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - in: "body"
        name: "project"
        description: "New created project."
        required: true
        schema:
          $ref: "#/definitions/ProjectReq"
        x-exportParamName: "Project"
      responses:
        "201":
          description: "Created"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
            Location:
              type: "string"
              description: "The location of the resource"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "409":
          description: "Conflict"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_id}:
    get:
      tags:
      - "project"
      summary: "Return specific project detail information"
      description: "This endpoint returns specific project information by project\
        \ ID."
      operationId: "getProject"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_id"
        in: "path"
        description: "The ID of the project"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "Return matched project information."
          schema:
            $ref: "#/definitions/Project"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "project"
      summary: "Update properties for a selected project."
      description: "This endpoint is aimed to update the properties of a project."
      operationId: "updateProject"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_id"
        in: "path"
        description: "The ID of the project"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ProjectId"
      - in: "body"
        name: "project"
        description: "Updates of project."
        required: true
        schema:
          $ref: "#/definitions/ProjectReq"
        x-exportParamName: "Project"
      responses:
        "200":
          description: "Success"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    delete:
      tags:
      - "project"
      summary: "Delete project by projectID"
      description: "This endpoint is aimed to delete project by project ID."
      operationId: "deleteProject"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_id"
        in: "path"
        description: "The ID of the project"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "Success"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "412":
          description: "Precondition failed"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_id}/_deletable:
    get:
      tags:
      - "project"
      summary: "Get the deletable status of the project"
      description: "Get the deletable status of the project"
      operationId: "getProjectDeletable"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_id"
        in: "path"
        description: "The ID of the project"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "Return deletable status of the project."
          schema:
            $ref: "#/definitions/ProjectDeletable"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_id}/summary:
    get:
      tags:
      - "project"
      summary: "Get summary of the project."
      description: "Get summary of the project."
      operationId: "getProjectSummary"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_id"
        in: "path"
        description: "The ID of the project"
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "ProjectId"
      responses:
        "200":
          description: "Get summary of the project successfully."
          schema:
            $ref: "#/definitions/ProjectSummary"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/repositories:
    get:
      tags:
      - "repository"
      summary: "List repositories"
      description: "List repositories of the specified project"
      operationId: "listRepositories"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "q"
        in: "query"
        description: "Query string to query resources. Supported query patterns are\
          \ \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"\
          list with union releationship(k={v1 v2 v3})\" and \"list with intersetion\
          \ relationship(k=(v1 v2 v3))\". The value of range and list can be string(enclosed\
          \ by \" or '), integer or time(in format \"2020-04-09 02:36:00\"). All of\
          \ these query patterns should be put in the query string \"q=xxx\" and splitted\
          \ by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]"
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "The page number"
        required: false
        type: "integer"
        default: 1
        format: "int64"
        x-exportParamName: "Page"
        x-optionalDataType: "Int64"
      - name: "page_size"
        in: "query"
        description: "The size of per page"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        format: "int64"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int64"
      responses:
        "200":
          description: "Success"
          headers:
            X-Total-Count:
              type: "integer"
              description: "The total count of repositories"
            Link:
              type: "string"
              description: "Link refers to the previous page and next page"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Repository"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/repositories/{repository_name}:
    get:
      tags:
      - "repository"
      summary: "Get repository"
      description: "Get the repository specified by name"
      operationId: "getRepository"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "repository_name"
        in: "path"
        description: "The name of the repository. If it contains slash, encode it\
          \ with URL encoding. e.g. a/b -> a%252Fb"
        required: true
        type: "string"
        x-exportParamName: "RepositoryName"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Repository"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "repository"
      summary: "Update repository"
      description: "Update the repository specified by name"
      operationId: "updateRepository"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "repository_name"
        in: "path"
        description: "The name of the repository. If it contains slash, encode it\
          \ with URL encoding. e.g. a/b -> a%252Fb"
        required: true
        type: "string"
        x-exportParamName: "RepositoryName"
      - in: "body"
        name: "repository"
        description: "The JSON object of repository."
        required: true
        schema:
          $ref: "#/definitions/Repository"
        x-exportParamName: "Repository"
      responses:
        "200":
          description: "Success"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    delete:
      tags:
      - "repository"
      summary: "Delete repository"
      description: "Delete the repository specified by name"
      operationId: "deleteRepository"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "repository_name"
        in: "path"
        description: "The name of the repository. If it contains slash, encode it\
          \ with URL encoding. e.g. a/b -> a%252Fb"
        required: true
        type: "string"
        x-exportParamName: "RepositoryName"
      responses:
        "200":
          description: "Success"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/repositories/{repository_name}/artifacts:
    get:
      tags:
      - "artifact"
      summary: "List artifacts"
      description: "List artifacts under the specific project and repository. Except\
        \ the basic properties, the other supported queries in \"q\" includes \"tags=*\"\
        \ to list only tagged artifacts, \"tags=nil\" to list only untagged artifacts,\
        \ \"tags=~v\" to list artifacts whose tag fuzzy matches \"v\", \"tags=v\"\
        \ to list artifact whose tag exactly matches \"v\", \"labels=(id1, id2)\"\
        \ to list artifacts that both labels with id1 and id2 are added to"
      operationId: "listArtifacts"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "repository_name"
        in: "path"
        description: "The name of the repository. If it contains slash, encode it\
          \ with URL encoding. e.g. a/b -> a%252Fb"
        required: true
        type: "string"
        x-exportParamName: "RepositoryName"
      - name: "q"
        in: "query"
        description: "Query string to query resources. Supported query patterns are\
          \ \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"\
          list with union releationship(k={v1 v2 v3})\" and \"list with intersetion\
          \ relationship(k=(v1 v2 v3))\". The value of range and list can be string(enclosed\
          \ by \" or '), integer or time(in format \"2020-04-09 02:36:00\"). All of\
          \ these query patterns should be put in the query string \"q=xxx\" and splitted\
          \ by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]"
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "The page number"
        required: false
        type: "integer"
        default: 1
        format: "int64"
        x-exportParamName: "Page"
        x-optionalDataType: "Int64"
      - name: "page_size"
        in: "query"
        description: "The size of per page"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        format: "int64"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int64"
      - name: "with_tag"
        in: "query"
        description: "Specify whether the tags are included inside the returning artifacts"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "WithTag"
        x-optionalDataType: "Bool"
      - name: "with_label"
        in: "query"
        description: "Specify whether the labels are included inside the returning\
          \ artifacts"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithLabel"
        x-optionalDataType: "Bool"
      - name: "with_scan_overview"
        in: "query"
        description: "Specify whether the scan overview is included inside the returning\
          \ artifacts"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithScanOverview"
        x-optionalDataType: "Bool"
      - name: "with_signature"
        in: "query"
        description: "Specify whether the signature is included inside the tags of\
          \ the returning artifacts. Only works when setting \"with_tag=true\""
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithSignature"
        x-optionalDataType: "Bool"
      - name: "with_immutable_status"
        in: "query"
        description: "Specify whether the immutable status is included inside the\
          \ tags of the returning artifacts. Only works when setting \"with_tag=true\""
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithImmutableStatus"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Success"
          headers:
            X-Total-Count:
              type: "integer"
              description: "The total count of artifacts"
            Link:
              type: "string"
              description: "Link refers to the previous page and next page"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Artifact"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    post:
      tags:
      - "artifact"
      summary: "Copy artifact"
      description: "Copy the artifact specified in the \"from\" parameter to the repository."
      operationId: "CopyArtifact"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "repository_name"
        in: "path"
        description: "The name of the repository. If it contains slash, encode it\
          \ with URL encoding. e.g. a/b -> a%252Fb"
        required: true
        type: "string"
        x-exportParamName: "RepositoryName"
      - name: "from"
        in: "query"
        description: "The artifact from which the new artifact is copied from, the\
          \ format should be \"project/repository:tag\" or \"project/repository@digest\"\
          ."
        required: true
        type: "string"
        x-exportParamName: "From"
      responses:
        "201":
          description: "Created"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
            Location:
              type: "string"
              description: "The location of the resource"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "405":
          description: "Method not allowed"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}:
    get:
      tags:
      - "artifact"
      summary: "Get the specific artifact"
      description: "Get the artifact specified by the reference under the project\
        \ and repository. The reference can be digest or tag."
      operationId: "getArtifact"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "repository_name"
        in: "path"
        description: "The name of the repository. If it contains slash, encode it\
          \ with URL encoding. e.g. a/b -> a%252Fb"
        required: true
        type: "string"
        x-exportParamName: "RepositoryName"
      - name: "reference"
        in: "path"
        description: "The reference of the artifact, can be digest or tag"
        required: true
        type: "string"
        x-exportParamName: "Reference"
      - name: "page"
        in: "query"
        description: "The page number"
        required: false
        type: "integer"
        default: 1
        format: "int64"
        x-exportParamName: "Page"
        x-optionalDataType: "Int64"
      - name: "page_size"
        in: "query"
        description: "The size of per page"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        format: "int64"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int64"
      - name: "with_tag"
        in: "query"
        description: "Specify whether the tags are inclued inside the returning artifacts"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "WithTag"
        x-optionalDataType: "Bool"
      - name: "with_label"
        in: "query"
        description: "Specify whether the labels are inclued inside the returning\
          \ artifacts"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithLabel"
        x-optionalDataType: "Bool"
      - name: "with_scan_overview"
        in: "query"
        description: "Specify whether the scan overview is inclued inside the returning\
          \ artifacts"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithScanOverview"
        x-optionalDataType: "Bool"
      - name: "with_signature"
        in: "query"
        description: "Specify whether the signature is inclued inside the returning\
          \ artifacts"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithSignature"
        x-optionalDataType: "Bool"
      - name: "with_immutable_status"
        in: "query"
        description: "Specify whether the immutable status is inclued inside the tags\
          \ of the returning artifacts. Only works when setting \"with_tag=true\""
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithImmutableStatus"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Artifact"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    delete:
      tags:
      - "artifact"
      summary: "Delete the specific artifact"
      description: "Delete the artifact specified by the reference under the project\
        \ and repository. The reference can be digest or tag"
      operationId: "deleteArtifact"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "repository_name"
        in: "path"
        description: "The name of the repository. If it contains slash, encode it\
          \ with URL encoding. e.g. a/b -> a%252Fb"
        required: true
        type: "string"
        x-exportParamName: "RepositoryName"
      - name: "reference"
        in: "path"
        description: "The reference of the artifact, can be digest or tag"
        required: true
        type: "string"
        x-exportParamName: "Reference"
      responses:
        "200":
          description: "Success"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan:
    post:
      tags:
      - "scan"
      summary: "Scan the artifact"
      description: "Scan the specified artifact"
      operationId: "scanArtifact"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "repository_name"
        in: "path"
        description: "The name of the repository. If it contains slash, encode it\
          \ with URL encoding. e.g. a/b -> a%252Fb"
        required: true
        type: "string"
        x-exportParamName: "RepositoryName"
      - name: "reference"
        in: "path"
        description: "The reference of the artifact, can be digest or tag"
        required: true
        type: "string"
        x-exportParamName: "Reference"
      responses:
        "202":
          description: "Accepted"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/scan/{report_id}/log:
    get:
      tags:
      - "scan"
      summary: "Get the log of the scan report"
      description: "Get the log of the scan report"
      operationId: "getReportLog"
      produces:
      - "text/plain"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "repository_name"
        in: "path"
        description: "The name of the repository. If it contains slash, encode it\
          \ with URL encoding. e.g. a/b -> a%252Fb"
        required: true
        type: "string"
        x-exportParamName: "RepositoryName"
      - name: "reference"
        in: "path"
        description: "The reference of the artifact, can be digest or tag"
        required: true
        type: "string"
        x-exportParamName: "Reference"
      - name: "report_id"
        in: "path"
        description: "The report id to get the log"
        required: true
        type: "string"
        x-exportParamName: "ReportId"
      responses:
        "200":
          description: "Successfully get scan log file"
          schema:
            type: "string"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/tags:
    get:
      tags:
      - "artifact"
      summary: "List tags"
      description: "List tags of the specific artifact"
      operationId: "listTags"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "repository_name"
        in: "path"
        description: "The name of the repository. If it contains slash, encode it\
          \ with URL encoding. e.g. a/b -> a%252Fb"
        required: true
        type: "string"
        x-exportParamName: "RepositoryName"
      - name: "reference"
        in: "path"
        description: "The reference of the artifact, can be digest or tag"
        required: true
        type: "string"
        x-exportParamName: "Reference"
      - name: "q"
        in: "query"
        description: "Query string to query resources. Supported query patterns are\
          \ \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"\
          list with union releationship(k={v1 v2 v3})\" and \"list with intersetion\
          \ relationship(k=(v1 v2 v3))\". The value of range and list can be string(enclosed\
          \ by \" or '), integer or time(in format \"2020-04-09 02:36:00\"). All of\
          \ these query patterns should be put in the query string \"q=xxx\" and splitted\
          \ by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]"
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "The page number"
        required: false
        type: "integer"
        default: 1
        format: "int64"
        x-exportParamName: "Page"
        x-optionalDataType: "Int64"
      - name: "page_size"
        in: "query"
        description: "The size of per page"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        format: "int64"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int64"
      - name: "with_signature"
        in: "query"
        description: "Specify whether the signature is included inside the returning\
          \ tags"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithSignature"
        x-optionalDataType: "Bool"
      - name: "with_immutable_status"
        in: "query"
        description: "Specify whether the immutable status is included inside the\
          \ returning tags"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "WithImmutableStatus"
        x-optionalDataType: "Bool"
      responses:
        "200":
          description: "Success"
          headers:
            X-Total-Count:
              type: "integer"
              description: "The total count of tags"
            Link:
              type: "string"
              description: "Link refers to the previous page and next page"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Tag"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    post:
      tags:
      - "artifact"
      summary: "Create tag"
      description: "Create a tag for the specified artifact"
      operationId: "createTag"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "repository_name"
        in: "path"
        description: "The name of the repository. If it contains slash, encode it\
          \ with URL encoding. e.g. a/b -> a%252Fb"
        required: true
        type: "string"
        x-exportParamName: "RepositoryName"
      - name: "reference"
        in: "path"
        description: "The reference of the artifact, can be digest or tag"
        required: true
        type: "string"
        x-exportParamName: "Reference"
      - in: "body"
        name: "tag"
        description: "The JSON object of tag."
        required: true
        schema:
          $ref: "#/definitions/Tag"
        x-exportParamName: "Tag"
      responses:
        "201":
          description: "Created"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
            Location:
              type: "string"
              description: "The location of the resource"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "405":
          description: "Method not allowed"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "409":
          description: "Conflict"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/tags/{tag_name}:
    delete:
      tags:
      - "artifact"
      summary: "Delete tag"
      description: "Delete the tag of the specified artifact"
      operationId: "deleteTag"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "repository_name"
        in: "path"
        description: "The name of the repository. If it contains slash, encode it\
          \ with URL encoding. e.g. a/b -> a%252Fb"
        required: true
        type: "string"
        x-exportParamName: "RepositoryName"
      - name: "reference"
        in: "path"
        description: "The reference of the artifact, can be digest or tag"
        required: true
        type: "string"
        x-exportParamName: "Reference"
      - name: "tag_name"
        in: "path"
        description: "The name of the tag"
        required: true
        type: "string"
        x-exportParamName: "TagName"
      responses:
        "200":
          description: "Success"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/additions/{addition}:
    get:
      tags:
      - "artifact"
      summary: "Get the addition of the specific artifact"
      description: "Get the addition of the artifact specified by the reference under\
        \ the project and repository."
      operationId: "getAddition"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "repository_name"
        in: "path"
        description: "The name of the repository. If it contains slash, encode it\
          \ with URL encoding. e.g. a/b -> a%252Fb"
        required: true
        type: "string"
        x-exportParamName: "RepositoryName"
      - name: "reference"
        in: "path"
        description: "The reference of the artifact, can be digest or tag"
        required: true
        type: "string"
        x-exportParamName: "Reference"
      - name: "addition"
        in: "path"
        description: "The type of addition."
        required: true
        type: "string"
        enum:
        - "build_history"
        - "values.yaml"
        - "readme.md"
        - "dependencies"
        - "vulnerabilities"
        x-exportParamName: "Addition"
      responses:
        "200":
          description: "Success"
          headers:
            Content-Type:
              type: "string"
              description: "The content type of the addition"
          schema:
            type: "string"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/labels:
    post:
      tags:
      - "artifact"
      summary: "Add label to artifact"
      description: "Add label to the specified artiact."
      operationId: "addLabel"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "repository_name"
        in: "path"
        description: "The name of the repository. If it contains slash, encode it\
          \ with URL encoding. e.g. a/b -> a%252Fb"
        required: true
        type: "string"
        x-exportParamName: "RepositoryName"
      - name: "reference"
        in: "path"
        description: "The reference of the artifact, can be digest or tag"
        required: true
        type: "string"
        x-exportParamName: "Reference"
      - in: "body"
        name: "label"
        description: "The label that added to the artifact. Only the ID property is\
          \ needed."
        required: true
        schema:
          $ref: "#/definitions/Label"
        x-exportParamName: "Label"
      responses:
        "200":
          description: "Success"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "409":
          description: "Conflict"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/repositories/{repository_name}/artifacts/{reference}/labels/{label_id}:
    delete:
      tags:
      - "artifact"
      summary: "Remove label from artifact"
      description: "Remove the label from the specified artiact."
      operationId: "removeLabel"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "repository_name"
        in: "path"
        description: "The name of the repository. If it contains slash, encode it\
          \ with URL encoding. e.g. a/b -> a%252Fb"
        required: true
        type: "string"
        x-exportParamName: "RepositoryName"
      - name: "reference"
        in: "path"
        description: "The reference of the artifact, can be digest or tag"
        required: true
        type: "string"
        x-exportParamName: "Reference"
      - name: "label_id"
        in: "path"
        description: "The ID of the label that removed from the artifact."
        required: true
        type: "integer"
        format: "int64"
        x-exportParamName: "LabelId"
      responses:
        "200":
          description: "Success"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "409":
          description: "Conflict"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /audit-logs:
    get:
      tags:
      - "auditlog"
      summary: "Get recent logs of the projects which the user is a member of"
      description: "This endpoint let user see the recent operation logs of the projects\
        \ which he is member of\n"
      operationId: "listAuditLogs"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "q"
        in: "query"
        description: "Query string to query resources. Supported query patterns are\
          \ \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"\
          list with union releationship(k={v1 v2 v3})\" and \"list with intersetion\
          \ relationship(k=(v1 v2 v3))\". The value of range and list can be string(enclosed\
          \ by \" or '), integer or time(in format \"2020-04-09 02:36:00\"). All of\
          \ these query patterns should be put in the query string \"q=xxx\" and splitted\
          \ by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]"
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "The page number"
        required: false
        type: "integer"
        default: 1
        format: "int64"
        x-exportParamName: "Page"
        x-optionalDataType: "Int64"
      - name: "page_size"
        in: "query"
        description: "The size of per page"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        format: "int64"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int64"
      responses:
        "200":
          description: "Success"
          headers:
            X-Total-Count:
              type: "integer"
              description: "The total count of auditlogs"
            Link:
              type: "string"
              description: "Link refers to the previous page and next page"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/logs:
    get:
      tags:
      - "project"
      summary: "Get recent logs of the projects"
      description: "Get recent logs of the projects"
      operationId: "getLogs"
      parameters:
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "q"
        in: "query"
        description: "Query string to query resources. Supported query patterns are\
          \ \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"\
          list with union releationship(k={v1 v2 v3})\" and \"list with intersetion\
          \ relationship(k=(v1 v2 v3))\". The value of range and list can be string(enclosed\
          \ by \" or '), integer or time(in format \"2020-04-09 02:36:00\"). All of\
          \ these query patterns should be put in the query string \"q=xxx\" and splitted\
          \ by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]"
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "The page number"
        required: false
        type: "integer"
        default: 1
        format: "int64"
        x-exportParamName: "Page"
        x-optionalDataType: "Int64"
      - name: "page_size"
        in: "query"
        description: "The size of per page"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        format: "int64"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int64"
      responses:
        "200":
          description: "Success"
          headers:
            X-Total-Count:
              type: "integer"
              description: "The total count of auditlogs"
            Link:
              type: "string"
              description: "Link refers to the previous page and next page"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AuditLog"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /p2p/preheat/providers:
    get:
      tags:
      - "preheat"
      summary: "List P2P providers"
      description: "List P2P providers"
      operationId: "ListProviders"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Metadata"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /p2p/preheat/instances/ping:
    post:
      tags:
      - "preheat"
      summary: "Ping status of a instance."
      description: "This endpoint checks status of a instance, the instance can be\
        \ given by ID or Endpoint URL (together with credential)\n"
      operationId: "PingInstances"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - in: "body"
        name: "instance"
        description: "The JSON object of instance."
        required: true
        schema:
          $ref: "#/definitions/Instance"
        x-exportParamName: "Instance"
      responses:
        "200":
          description: "Success"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Instance not found (when instance is provided by ID)."
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /p2p/preheat/instances:
    get:
      tags:
      - "preheat"
      summary: "List P2P provider instances"
      description: "List P2P provider instances"
      operationId: "ListInstances"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "page"
        in: "query"
        description: "The page number"
        required: false
        type: "integer"
        default: 1
        format: "int64"
        x-exportParamName: "Page"
        x-optionalDataType: "Int64"
      - name: "page_size"
        in: "query"
        description: "The size of per page"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        format: "int64"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int64"
      - name: "q"
        in: "query"
        description: "Query string to query resources. Supported query patterns are\
          \ \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"\
          list with union releationship(k={v1 v2 v3})\" and \"list with intersetion\
          \ relationship(k=(v1 v2 v3))\". The value of range and list can be string(enclosed\
          \ by \" or '), integer or time(in format \"2020-04-09 02:36:00\"). All of\
          \ these query patterns should be put in the query string \"q=xxx\" and splitted\
          \ by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]"
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          headers:
            X-Total-Count:
              type: "integer"
              description: "The total count of preheating provider instances"
            Link:
              type: "string"
              description: "Link refers to the previous page and next page"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Instance"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    post:
      tags:
      - "preheat"
      summary: "Create p2p provider instances"
      description: "Create p2p provider instances"
      operationId: "CreateInstance"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - in: "body"
        name: "instance"
        description: "The JSON object of instance."
        required: true
        schema:
          $ref: "#/definitions/Instance"
        x-exportParamName: "Instance"
      responses:
        "201":
          description: "Response to insatnce created"
          schema:
            $ref: "#/definitions/InstanceCreatedResp"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "409":
          description: "Conflict"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /p2p/preheat/instances/{preheat_instance_name}:
    get:
      tags:
      - "preheat"
      summary: "Get a P2P provider instance"
      description: "Get a P2P provider instance"
      operationId: "GetInstance"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "preheat_instance_name"
        in: "path"
        description: "Instance Name"
        required: true
        type: "string"
        x-exportParamName: "PreheatInstanceName"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Instance"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "preheat"
      summary: "Update the specified P2P provider instance"
      description: "Update the specified P2P provider instance"
      operationId: "UpdateInstance"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "preheat_instance_name"
        in: "path"
        description: "Instance Name"
        required: true
        type: "string"
        x-exportParamName: "PreheatInstanceName"
      - in: "body"
        name: "instance"
        description: "The instance to update"
        required: true
        schema:
          $ref: "#/definitions/Instance"
        x-exportParamName: "Instance"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/InstanceUpdateResp"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    delete:
      tags:
      - "preheat"
      summary: "Delete the specified P2P provider instance"
      description: "Delete the specified P2P provider instance"
      operationId: "DeleteInstance"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "preheat_instance_name"
        in: "path"
        description: "Instance Name"
        required: true
        type: "string"
        x-exportParamName: "PreheatInstanceName"
      responses:
        "200":
          description: "Instance ID deleted"
          schema:
            $ref: "#/definitions/InstanceDeletedResp"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/preheat/policies:
    get:
      tags:
      - "preheat"
      summary: "List preheat policies"
      description: "List preheat policies"
      operationId: "ListPolicies"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "page"
        in: "query"
        description: "The page number"
        required: false
        type: "integer"
        default: 1
        format: "int64"
        x-exportParamName: "Page"
        x-optionalDataType: "Int64"
      - name: "page_size"
        in: "query"
        description: "The size of per page"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        format: "int64"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int64"
      - name: "q"
        in: "query"
        description: "Query string to query resources. Supported query patterns are\
          \ \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"\
          list with union releationship(k={v1 v2 v3})\" and \"list with intersetion\
          \ relationship(k=(v1 v2 v3))\". The value of range and list can be string(enclosed\
          \ by \" or '), integer or time(in format \"2020-04-09 02:36:00\"). All of\
          \ these query patterns should be put in the query string \"q=xxx\" and splitted\
          \ by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]"
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List preheat policies success"
          headers:
            X-Total-Count:
              type: "integer"
              description: "The total count of policies"
            Link:
              type: "string"
              description: "Link refers to the previous page and next page"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PreheatPolicy"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    post:
      tags:
      - "preheat"
      summary: "Create a preheat policy under a project"
      description: "Create a preheat policy under a project"
      operationId: "CreatePolicy"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - in: "body"
        name: "policy"
        description: "The policy schema info"
        required: true
        schema:
          $ref: "#/definitions/PreheatPolicy"
        x-exportParamName: "Policy"
      responses:
        "201":
          description: "Created"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
            Location:
              type: "string"
              description: "The location of the resource"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "409":
          description: "Conflict"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/preheat/policies/{preheat_policy_name}:
    get:
      tags:
      - "preheat"
      summary: "Get a preheat policy"
      description: "Get a preheat policy"
      operationId: "GetPolicy"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "preheat_policy_name"
        in: "path"
        description: "Preheat Policy Name"
        required: true
        type: "string"
        x-exportParamName: "PreheatPolicyName"
      responses:
        "200":
          description: "Get a preheat policy success"
          schema:
            $ref: "#/definitions/PreheatPolicy"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    post:
      tags:
      - "preheat"
      summary: "Manual preheat"
      description: "Manual preheat"
      operationId: "ManualPreheat"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "preheat_policy_name"
        in: "path"
        description: "Preheat Policy Name"
        required: true
        type: "string"
        x-exportParamName: "PreheatPolicyName"
      - in: "body"
        name: "policy"
        description: "The policy schema info"
        required: true
        schema:
          $ref: "#/definitions/PreheatPolicy"
        x-exportParamName: "Policy"
      responses:
        "201":
          description: "Created"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
            Location:
              type: "string"
              description: "The location of the resource"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    put:
      tags:
      - "preheat"
      summary: "Update preheat policy"
      description: "Update preheat policy"
      operationId: "UpdatePolicy"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "preheat_policy_name"
        in: "path"
        description: "Preheat Policy Name"
        required: true
        type: "string"
        x-exportParamName: "PreheatPolicyName"
      - in: "body"
        name: "policy"
        description: "The policy schema info"
        required: true
        schema:
          $ref: "#/definitions/PreheatPolicy"
        x-exportParamName: "Policy"
      responses:
        "200":
          description: "Success"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "409":
          description: "Conflict"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    delete:
      tags:
      - "preheat"
      summary: "Delete a preheat policy"
      description: "Delete a preheat policy"
      operationId: "DeletePolicy"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "preheat_policy_name"
        in: "path"
        description: "Preheat Policy Name"
        required: true
        type: "string"
        x-exportParamName: "PreheatPolicyName"
      responses:
        "200":
          description: "Success"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions:
    get:
      tags:
      - "preheat"
      summary: "List executions for the given policy"
      description: "List executions for the given policy"
      operationId: "ListExecutions"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "preheat_policy_name"
        in: "path"
        description: "Preheat Policy Name"
        required: true
        type: "string"
        x-exportParamName: "PreheatPolicyName"
      - name: "page"
        in: "query"
        description: "The page number"
        required: false
        type: "integer"
        default: 1
        format: "int64"
        x-exportParamName: "Page"
        x-optionalDataType: "Int64"
      - name: "page_size"
        in: "query"
        description: "The size of per page"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        format: "int64"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int64"
      - name: "q"
        in: "query"
        description: "Query string to query resources. Supported query patterns are\
          \ \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"\
          list with union releationship(k={v1 v2 v3})\" and \"list with intersetion\
          \ relationship(k=(v1 v2 v3))\". The value of range and list can be string(enclosed\
          \ by \" or '), integer or time(in format \"2020-04-09 02:36:00\"). All of\
          \ these query patterns should be put in the query string \"q=xxx\" and splitted\
          \ by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]"
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List executions success"
          headers:
            X-Total-Count:
              type: "integer"
              description: "The total count of executions"
            Link:
              type: "string"
              description: "Link refers to the previous page and next page"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Execution"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}:
    get:
      tags:
      - "preheat"
      summary: "Get a execution detail by id"
      description: "Get a execution detail by id"
      operationId: "GetExecution"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "preheat_policy_name"
        in: "path"
        description: "Preheat Policy Name"
        required: true
        type: "string"
        x-exportParamName: "PreheatPolicyName"
      - name: "execution_id"
        in: "path"
        description: "Execution ID"
        required: true
        type: "integer"
        x-exportParamName: "ExecutionId"
      responses:
        "200":
          description: "Get execution success"
          schema:
            $ref: "#/definitions/Execution"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
    patch:
      tags:
      - "preheat"
      summary: "Stop a execution"
      description: "Stop a execution"
      operationId: "StopExecution"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "preheat_policy_name"
        in: "path"
        description: "Preheat Policy Name"
        required: true
        type: "string"
        x-exportParamName: "PreheatPolicyName"
      - name: "execution_id"
        in: "path"
        description: "Execution ID"
        required: true
        type: "integer"
        x-exportParamName: "ExecutionId"
      - in: "body"
        name: "execution"
        description: "The data of execution"
        required: true
        schema:
          $ref: "#/definitions/Execution"
        x-exportParamName: "Execution"
      responses:
        "200":
          description: "Success"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}/tasks:
    get:
      tags:
      - "preheat"
      summary: "List all the related tasks for the given execution"
      description: "List all the related tasks for the given execution"
      operationId: "ListTasks"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "preheat_policy_name"
        in: "path"
        description: "Preheat Policy Name"
        required: true
        type: "string"
        x-exportParamName: "PreheatPolicyName"
      - name: "execution_id"
        in: "path"
        description: "Execution ID"
        required: true
        type: "integer"
        x-exportParamName: "ExecutionId"
      - name: "page"
        in: "query"
        description: "The page number"
        required: false
        type: "integer"
        default: 1
        format: "int64"
        x-exportParamName: "Page"
        x-optionalDataType: "Int64"
      - name: "page_size"
        in: "query"
        description: "The size of per page"
        required: false
        type: "integer"
        default: 10
        maximum: 100
        format: "int64"
        x-exportParamName: "PageSize"
        x-optionalDataType: "Int64"
      - name: "q"
        in: "query"
        description: "Query string to query resources. Supported query patterns are\
          \ \"exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"\
          list with union releationship(k={v1 v2 v3})\" and \"list with intersetion\
          \ relationship(k=(v1 v2 v3))\". The value of range and list can be string(enclosed\
          \ by \" or '), integer or time(in format \"2020-04-09 02:36:00\"). All of\
          \ these query patterns should be put in the query string \"q=xxx\" and splitted\
          \ by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]"
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "List tasks success"
          headers:
            X-Total-Count:
              type: "integer"
              description: "The total count of tasks"
            Link:
              type: "string"
              description: "Link refers to the previous page and next page"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Task"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/preheat/policies/{preheat_policy_name}/executions/{execution_id}/tasks/{task_id}/logs:
    get:
      tags:
      - "preheat"
      summary: "Get the log text stream of the specified task for the given execution"
      description: "Get the log text stream of the specified task for the given execution"
      operationId: "GetPreheatLog"
      produces:
      - "text/plain"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      - name: "preheat_policy_name"
        in: "path"
        description: "Preheat Policy Name"
        required: true
        type: "string"
        x-exportParamName: "PreheatPolicyName"
      - name: "execution_id"
        in: "path"
        description: "Execution ID"
        required: true
        type: "integer"
        x-exportParamName: "ExecutionId"
      - name: "task_id"
        in: "path"
        description: "Task ID"
        required: true
        type: "integer"
        x-exportParamName: "TaskId"
      responses:
        "200":
          description: "Get log success"
          headers:
            Content-Type:
              type: "string"
              description: "Content type of response"
          schema:
            type: "string"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /projects/{project_name}/preheat/providers:
    get:
      tags:
      - "preheat"
      summary: "Get all providers at project level"
      description: "Get all providers at project level"
      operationId: "ListProvidersUnderProject"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "project_name"
        in: "path"
        description: "The name of the project"
        required: true
        type: "string"
        x-exportParamName: "ProjectName"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProviderUnderProject"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "401":
          description: "Unauthorized"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "403":
          description: "Forbidden"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
  /icons/{digest}:
    get:
      tags:
      - "icon"
      summary: "Get artifact icon"
      description: "Get the artifact icon with the specified digest. As the original\
        \ icon image is resized and encoded before returning, the parameter \"digest\"\
        \ in the path doesn't match the hash of the returned content"
      operationId: "getIcon"
      parameters:
      - name: "X-Request-Id"
        in: "header"
        description: "An unique ID for the request"
        required: false
        type: "string"
        minLength: 1
        x-exportParamName: "XRequestId"
        x-optionalDataType: "String"
      - name: "digest"
        in: "path"
        description: "The digest of the resource"
        required: true
        type: "string"
        x-exportParamName: "Digest"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Icon"
        "400":
          description: "Bad request"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "404":
          description: "Not found"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
        "500":
          description: "Internal server error"
          headers:
            X-Request-Id:
              type: "string"
              description: "The ID of the corresponding request for the response"
          schema:
            $ref: "#/definitions/Errors"
securityDefinitions:
  basic:
    type: "basic"
definitions:
  Errors:
    type: "object"
    properties:
      errors:
        type: "array"
        items:
          $ref: "#/definitions/Error"
    description: "The error array that describe the errors got during the handling\
      \ of request"
  Error:
    type: "object"
    properties:
      code:
        type: "string"
        description: "The error code"
      message:
        type: "string"
        description: "The error message"
    description: "a model for all the error response coming from harbor"
  Repository:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "The ID of the repository"
      project_id:
        type: "integer"
        format: "int64"
        description: "The ID of the project that the repository belongs to"
      name:
        type: "string"
        description: "The name of the repository"
      description:
        type: "string"
        description: "The description of the repository"
      artifact_count:
        type: "integer"
        format: "int64"
        description: "The count of the artifacts inside the repository"
      pull_count:
        type: "integer"
        format: "int64"
        description: "The count that the artifact inside the repository pulled"
      creation_time:
        type: "string"
        format: "date-time"
        description: "The creation time of the repository"
      update_time:
        type: "string"
        format: "date-time"
        description: "The update time of the repository"
    example:
      creation_time: "2000-01-23T04:56:07.000+00:00"
      update_time: "2000-01-23T04:56:07.000+00:00"
      project_id: 6
      name: "name"
      artifact_count: 1
      description: "description"
      id: 0
      pull_count: 5
  Artifact:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "The ID of the artifact"
      type:
        type: "string"
        description: "The type of the artifact, e.g. image, chart, etc"
      media_type:
        type: "string"
        description: "The media type of the artifact"
      manifest_media_type:
        type: "string"
        description: "The manifest media type of the artifact"
      project_id:
        type: "integer"
        format: "int64"
        description: "The ID of the project that the artifact belongs to"
      repository_id:
        type: "integer"
        format: "int64"
        description: "The ID of the repository that the artifact belongs to"
      digest:
        type: "string"
        description: "The digest of the artifact"
      size:
        type: "integer"
        format: "int64"
        description: "The size of the artifact"
      icon:
        type: "string"
        description: "The digest of the icon"
      push_time:
        type: "string"
        format: "date-time"
        description: "The push time of the artifact"
      pull_time:
        type: "string"
        format: "date-time"
        description: "The latest pull time of the artifact"
      extra_attrs:
        $ref: "#/definitions/ExtraAttrs"
      annotations:
        $ref: "#/definitions/Annotations"
      references:
        type: "array"
        items:
          $ref: "#/definitions/Reference"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
      addition_links:
        $ref: "#/definitions/AdditionLinks"
      labels:
        type: "array"
        items:
          $ref: "#/definitions/Label"
      scan_overview:
        description: "The overview of the scan result."
        $ref: "#/definitions/ScanOverview"
    example:
      references:
      - urls:
        - "urls"
        - "urls"
        child_id: 2
        parent_id: 5
        child_digest: "child_digest"
        platform:
          '''os.version''': "'os.version'"
          os: "os"
          variant: "variant"
          '''os.features''':
          - "'os.features'"
          - "'os.features'"
          architecture: "architecture"
      - urls:
        - "urls"
        - "urls"
        child_id: 2
        parent_id: 5
        child_digest: "child_digest"
        platform:
          '''os.version''': "'os.version'"
          os: "os"
          variant: "variant"
          '''os.features''':
          - "'os.features'"
          - "'os.features'"
          architecture: "architecture"
      addition_links: {}
      extra_attrs: {}
      icon: "icon"
      annotations: {}
      type: "type"
      manifest_media_type: "manifest_media_type"
      tags:
      - pull_time: "2000-01-23T04:56:07.000+00:00"
        immutable: true
        name: "name"
        signed: true
        repository_id: 9
        id: 7
        artifact_id: 3
        push_time: "2000-01-23T04:56:07.000+00:00"
      - pull_time: "2000-01-23T04:56:07.000+00:00"
        immutable: true
        name: "name"
        signed: true
        repository_id: 9
        id: 7
        artifact_id: 3
        push_time: "2000-01-23T04:56:07.000+00:00"
      labels:
      - creation_time: "2000-01-23T04:56:07.000+00:00"
        update_time: "2000-01-23T04:56:07.000+00:00"
        color: "color"
        project_id: 4
        scope: "scope"
        name: "name"
        description: "description"
        id: 2
      - creation_time: "2000-01-23T04:56:07.000+00:00"
        update_time: "2000-01-23T04:56:07.000+00:00"
        color: "color"
        project_id: 4
        scope: "scope"
        name: "name"
        description: "description"
        id: 2
      pull_time: "2000-01-23T04:56:07.000+00:00"
      size: 5
      media_type: "media_type"
      project_id: 6
      digest: "digest"
      scan_overview: {}
      repository_id: 1
      id: 0
      push_time: "2000-01-23T04:56:07.000+00:00"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "The ID of the tag"
      repository_id:
        type: "integer"
        format: "int64"
        description: "The ID of the repository that the tag belongs to"
      artifact_id:
        type: "integer"
        format: "int64"
        description: "The ID of the artifact that the tag attached to"
      name:
        type: "string"
        description: "The name of the tag"
      push_time:
        type: "string"
        format: "date-time"
        description: "The push time of the tag"
      pull_time:
        type: "string"
        format: "date-time"
        description: "The latest pull time of the tag"
      immutable:
        type: "boolean"
        description: "The immutable status of the tag"
        x-omitempty: false
      signed:
        type: "boolean"
        description: "The attribute indicates whether the tag is signed or not"
        x-omitempty: false
    example:
      pull_time: "2000-01-23T04:56:07.000+00:00"
      immutable: true
      name: "name"
      signed: true
      repository_id: 9
      id: 7
      artifact_id: 3
      push_time: "2000-01-23T04:56:07.000+00:00"
  ExtraAttrs:
    type: "object"
    additionalProperties:
      type: "object"
      properties: {}
  Annotations:
    type: "object"
    additionalProperties:
      type: "string"
  AdditionLinks:
    type: "object"
    additionalProperties:
      $ref: "#/definitions/AdditionLink"
  AdditionLink:
    type: "object"
    properties:
      href:
        type: "string"
        description: "The link of the addition"
      absolute:
        type: "boolean"
        description: "Determine whether the link is an absolute URL or not"
        x-omitempty: false
  Reference:
    type: "object"
    properties:
      parent_id:
        type: "integer"
        format: "int64"
        description: "The parent ID of the reference"
      child_id:
        type: "integer"
        format: "int64"
        description: "The child ID of the reference"
      child_digest:
        type: "string"
        description: "The digest of the child artifact"
      platform:
        $ref: "#/definitions/Platform"
      annotations:
        $ref: "#/definitions/Annotations"
      urls:
        type: "array"
        description: "The download URLs"
        items:
          type: "string"
    example:
      urls:
      - "urls"
      - "urls"
      child_id: 2
      parent_id: 5
      child_digest: "child_digest"
      platform:
        '''os.version''': "'os.version'"
        os: "os"
        variant: "variant"
        '''os.features''':
        - "'os.features'"
        - "'os.features'"
        architecture: "architecture"
  Platform:
    type: "object"
    properties:
      architecture:
        type: "string"
        description: "The architecture that the artifact applys to"
      os:
        type: "string"
        description: "The OS that the artifact applys to"
      '''os.version''':
        type: "string"
        description: "The version of the OS that the artifact applys to"
      '''os.features''':
        type: "array"
        description: "The features of the OS that the artifact applys to"
        items:
          type: "string"
      variant:
        type: "string"
        description: "The variant of the CPU"
    example:
      '''os.version''': "'os.version'"
      os: "os"
      variant: "variant"
      '''os.features''':
      - "'os.features'"
      - "'os.features'"
      architecture: "architecture"
  Label:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "The ID of the label"
      name:
        type: "string"
        description: "The name the label"
      description:
        type: "string"
        description: "The description the label"
      color:
        type: "string"
        description: "The color the label"
      scope:
        type: "string"
        description: "The scope the label"
      project_id:
        type: "integer"
        format: "int64"
        description: "The ID of project that the label belongs to"
      creation_time:
        type: "string"
        format: "date-time"
        description: "The creation time the label"
      update_time:
        type: "string"
        format: "date-time"
        description: "The update time of the label"
    example:
      creation_time: "2000-01-23T04:56:07.000+00:00"
      update_time: "2000-01-23T04:56:07.000+00:00"
      color: "color"
      project_id: 4
      scope: "scope"
      name: "name"
      description: "description"
      id: 2
  ScanOverview:
    type: "object"
    description: "The scan overview attached in the metadata of tag"
    additionalProperties:
      $ref: "#/definitions/NativeReportSummary"
  NativeReportSummary:
    type: "object"
    properties:
      report_id:
        type: "string"
        example: "5f62c830-f996-11e9-957f-0242c0a89008"
        description: "id of the native scan report"
      scan_status:
        type: "string"
        example: "Success"
        description: "The status of the report generating process"
      severity:
        type: "string"
        example: "High"
        description: "The overall severity"
      duration:
        type: "integer"
        format: "int64"
        example: 300
        description: "The seconds spent for generating the report"
      summary:
        $ref: "#/definitions/VulnerabilitySummary"
      start_time:
        type: "string"
        format: "date-time"
        example: "2006-01-02T14:04:05"
        description: "The start time of the scan process that generating report"
      end_time:
        type: "string"
        format: "date-time"
        example: "2006-01-02T15:04:05"
        description: "The end time of the scan process that generating report"
      complete_percent:
        type: "integer"
        example: 100
        description: "The complete percent of the scanning which value is between\
          \ 0 and 100"
    description: "The summary for the native report"
  VulnerabilitySummary:
    type: "object"
    properties:
      total:
        type: "integer"
        format: "int"
        example: 500
        description: "The total number of the found vulnerabilities"
      fixable:
        type: "integer"
        format: "int"
        example: 100
        description: "The number of the fixable vulnerabilities"
      summary:
        type: "object"
        example:
          Critical: 5
          High: 5
        description: "Numbers of the vulnerabilities with different severity"
        additionalProperties:
          type: "integer"
          format: "int"
          example: 10
    description: "VulnerabilitySummary contains the total number of the foun d vulnerabilities\
      \ number and numbers of each severity level.\n"
  AuditLog:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The ID of the audit log entry."
      username:
        type: "string"
        description: "Username of the user in this log entry."
      resource:
        type: "string"
        description: "Name of the repository in this log entry."
      resource_type:
        type: "string"
        description: "Tag of the repository in this log entry."
      operation:
        type: "string"
        description: "The operation against the repository in this log entry."
      op_time:
        type: "string"
        format: "date-time"
        example: "2006-01-02T15:04:05"
        description: "The time when this operation is triggered."
    example:
      resource: "resource"
      resource_type: "resource_type"
      op_time: "2006-01-02T15:04:05"
      id: 0
      operation: "operation"
      username: "username"
  Metadata:
    type: "object"
    properties:
      id:
        type: "string"
        description: "id"
      name:
        type: "string"
        description: "name"
      icon:
        type: "string"
        description: "icon"
      maintainers:
        type: "array"
        description: "maintainers"
        items:
          type: "string"
      version:
        type: "string"
        description: "version"
      source:
        type: "string"
        description: "source"
    example:
      maintainers:
      - "maintainers"
      - "maintainers"
      name: "name"
      icon: "icon"
      id: "id"
      source: "source"
      version: "version"
  Instance:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Unique ID"
      name:
        type: "string"
        description: "Instance name"
      description:
        type: "string"
        description: "Description of instance"
      vendor:
        type: "string"
        description: "Based on which driver, identified by ID"
      endpoint:
        type: "string"
        description: "The service endpoint of this instance"
      auth_mode:
        type: "string"
        description: "The authentication way supported"
      auth_info:
        type: "object"
        description: "The auth credential data if exists"
        additionalProperties:
          type: "string"
      status:
        type: "string"
        description: "The health status"
      enabled:
        type: "boolean"
        description: "Whether the instance is activated or not"
      default:
        type: "boolean"
        description: "Whether the instance is default or not"
      insecure:
        type: "boolean"
        description: "Whether the instance endpoint is insecure or not"
      setup_timestamp:
        type: "integer"
        format: "int64"
        description: "The timestamp of instance setting up"
    example:
      endpoint: "endpoint"
      default: true
      vendor: "vendor"
      name: "name"
      insecure: true
      description: "description"
      auth_mode: "auth_mode"
      id: 0
      auth_info:
        key: "auth_info"
      setup_timestamp: 6
      enabled: true
      status: "status"
  InstanceUpdateResp:
    type: "object"
    properties:
      updated:
        type: "integer"
        description: "ID of instance updated"
    example:
      updated: 0
  InstanceDeletedResp:
    type: "object"
    properties:
      removed:
        type: "integer"
        description: "ID of instance removed"
    example:
      removed: 0
  InstanceCreatedResp:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "ID of instance created"
    example:
      id: 0
  PreheatPolicy:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The ID of preheat policy"
      name:
        type: "string"
        description: "The Name of preheat policy"
      description:
        type: "string"
        description: "The Description of preheat policy"
      project_id:
        type: "integer"
        description: "The ID of preheat policy project"
      provider_id:
        type: "integer"
        description: "The ID of preheat policy provider"
      provider_name:
        type: "string"
        description: "The Name of preheat policy provider"
      filters:
        type: "string"
        description: "The Filters of preheat policy"
      trigger:
        type: "string"
        description: "The Trigger of preheat policy"
      enabled:
        type: "boolean"
        description: "Whether the preheat policy enabled"
      creation_time:
        type: "string"
        format: "date-time"
        description: "The Create Time of preheat policy"
      update_time:
        type: "string"
        format: "date-time"
        description: "The Update Time of preheat policy"
    example:
      creation_time: "2000-01-23T04:56:07.000+00:00"
      update_time: "2000-01-23T04:56:07.000+00:00"
      project_id: 6
      name: "name"
      description: "description"
      provider_id: 1
      id: 0
      filters: "filters"
      trigger: "trigger"
      provider_name: "provider_name"
      enabled: true
  Metrics:
    type: "object"
    properties:
      task_count:
        type: "integer"
        description: "The count of task"
      success_task_count:
        type: "integer"
        description: "The count of success task"
      error_task_count:
        type: "integer"
        description: "The count of error task"
      pending_task_count:
        type: "integer"
        description: "The count of pending task"
      running_task_count:
        type: "integer"
        description: "The count of running task"
      scheduled_task_count:
        type: "integer"
        description: "The count of scheduled task"
      stopped_task_count:
        type: "integer"
        description: "The count of stopped task"
    example:
      running_task_count: 7
      success_task_count: 5
      stopped_task_count: 3
      scheduled_task_count: 9
      error_task_count: 5
      pending_task_count: 2
      task_count: 1
  Execution:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The ID of execution"
      vendor_type:
        type: "string"
        description: "The vendor type of execution"
      vendor_id:
        type: "integer"
        description: "The vendor id of execution"
      status:
        type: "string"
        description: "The status of execution"
      status_message:
        type: "string"
        description: "The status message of execution"
      metrics:
        $ref: "#/definitions/Metrics"
      trigger:
        type: "string"
        description: "The trigger of execution"
      extra_attrs:
        $ref: "#/definitions/ExtraAttrs"
      start_time:
        type: "string"
        description: "The start time of execution"
      end_time:
        type: "string"
        description: "The end time of execution"
    example:
      status_message: "status_message"
      start_time: "start_time"
      extra_attrs: {}
      vendor_id: 6
      end_time: "end_time"
      id: 0
      metrics:
        running_task_count: 7
        success_task_count: 5
        stopped_task_count: 3
        scheduled_task_count: 9
        error_task_count: 5
        pending_task_count: 2
        task_count: 1
      trigger: "trigger"
      vendor_type: "vendor_type"
      status: "status"
  Task:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The ID of task"
      execution_id:
        type: "integer"
        description: "The ID of task execution"
      status:
        type: "string"
        description: "The status of task"
      status_message:
        type: "string"
        description: "The status message of task"
      run_count:
        type: "integer"
        description: "The count of task run"
      extra_attrs:
        $ref: "#/definitions/ExtraAttrs"
      creation_time:
        type: "string"
        description: "The creation time of task"
      update_time:
        type: "string"
        description: "The update time of task"
      start_time:
        type: "string"
        description: "The start time of task"
      end_time:
        type: "string"
        description: "The end time of task"
    example:
      status_message: "status_message"
      creation_time: "creation_time"
      execution_id: 6
      start_time: "start_time"
      update_time: "update_time"
      extra_attrs: {}
      end_time: "end_time"
      id: 0
      status: "status"
      run_count: 1
  ProviderUnderProject:
    type: "object"
    properties:
      id:
        type: "integer"
      provider:
        type: "string"
      enabled:
        type: "boolean"
      default:
        type: "boolean"
    example:
      default: true
      provider: "provider"
      id: 0
      enabled: true
  Icon:
    type: "object"
    properties:
      content-type:
        type: "string"
        description: "The content type of the icon"
      content:
        type: "string"
        description: "The base64 encoded content of the icon"
    example:
      content-type: "content-type"
      content: "content"
  ProjectReq:
    type: "object"
    properties:
      project_name:
        type: "string"
        description: "The name of the project."
      public:
        type: "boolean"
        description: "deprecated, reserved for project creation in replication"
        x-nullable: true
      metadata:
        description: "The metadata of the project."
        $ref: "#/definitions/ProjectMetadata"
      cve_allowlist:
        description: "The CVE allowlist of the project."
        $ref: "#/definitions/CVEAllowlist"
      storage_limit:
        type: "integer"
        format: "int64"
        description: "The storage quota of the project."
        x-nullable: true
      registry_id:
        type: "integer"
        format: "int64"
        description: "The ID of referenced registry when creating the proxy cache\
          \ project"
        x-nullable: true
    example:
      metadata:
        severity: "severity"
        prevent_vul: "prevent_vul"
        retention_id: "retention_id"
        reuse_sys_cve_allowlist: "reuse_sys_cve_allowlist"
        public: "public"
        auto_scan: "auto_scan"
        enable_content_trust: "enable_content_trust"
      storage_limit: 0
      public: true
      cve_allowlist:
        creation_time: "2000-01-23T04:56:07.000+00:00"
        update_time: "2000-01-23T04:56:07.000+00:00"
        expires_at: 2
        project_id: 3
        id: 9
        items:
        - cve_id: "cve_id"
        - cve_id: "cve_id"
      project_name: "project_name"
      registry_id: 6
  Project:
    type: "object"
    properties:
      project_id:
        type: "integer"
        format: "int32"
        description: "Project ID"
      owner_id:
        type: "integer"
        format: "int32"
        description: "The owner ID of the project always means the creator of the\
          \ project."
      name:
        type: "string"
        description: "The name of the project."
      registry_id:
        type: "integer"
        format: "int64"
        description: "The ID of referenced registry when the project is a proxy cache\
          \ project."
      creation_time:
        type: "string"
        format: "date-time"
        description: "The creation time of the project."
      update_time:
        type: "string"
        format: "date-time"
        description: "The update time of the project."
      deleted:
        type: "boolean"
        description: "A deletion mark of the project."
      owner_name:
        type: "string"
        description: "The owner name of the project."
      togglable:
        type: "boolean"
        description: "Correspond to the UI about whether the project's publicity is\
          \  updatable (for UI)"
      current_user_role_id:
        type: "integer"
        description: "The role ID with highest permission of the current user who\
          \ triggered the API (for UI).  This attribute is deprecated and will be\
          \ removed in future versions."
      current_user_role_ids:
        type: "array"
        description: "The list of role ID of the current user who triggered the API\
          \ (for UI)"
        items:
          type: "integer"
          format: "int32"
      repo_count:
        type: "integer"
        description: "The number of the repositories under this project."
      chart_count:
        type: "integer"
        description: "The total number of charts under this project."
      metadata:
        description: "The metadata of the project."
        $ref: "#/definitions/ProjectMetadata"
      cve_allowlist:
        description: "The CVE allowlist of this project."
        $ref: "#/definitions/CVEAllowlist"
    example:
      creation_time: "2000-01-23T04:56:07.000+00:00"
      togglable: true
      metadata:
        severity: "severity"
        prevent_vul: "prevent_vul"
        retention_id: "retention_id"
        reuse_sys_cve_allowlist: "reuse_sys_cve_allowlist"
        public: "public"
        auto_scan: "auto_scan"
        enable_content_trust: "enable_content_trust"
      owner_name: "owner_name"
      owner_id: 6
      repo_count: 2
      registry_id: 1
      update_time: "2000-01-23T04:56:07.000+00:00"
      current_user_role_id: 5
      deleted: true
      project_id: 0
      name: "name"
      current_user_role_ids:
      - 5
      - 5
      cve_allowlist:
        creation_time: "2000-01-23T04:56:07.000+00:00"
        update_time: "2000-01-23T04:56:07.000+00:00"
        expires_at: 2
        project_id: 3
        id: 9
        items:
        - cve_id: "cve_id"
        - cve_id: "cve_id"
      chart_count: 7
  ProjectDeletable:
    type: "object"
    properties:
      deletable:
        type: "boolean"
        description: "Whether the project can be deleted."
      message:
        type: "string"
        description: "The detail message when the project can not be deleted."
    example:
      deletable: true
      message: "message"
  ProjectMetadata:
    type: "object"
    properties:
      public:
        type: "string"
        description: "The public status of the project. The valid values are \"true\"\
          , \"false\"."
      enable_content_trust:
        type: "string"
        description: "Whether content trust is enabled or not. If it is enabled, user\
          \ can't pull unsigned images from this project. The valid values are \"\
          true\", \"false\"."
        x-nullable: true
      prevent_vul:
        type: "string"
        description: "Whether prevent the vulnerable images from running. The valid\
          \ values are \"true\", \"false\"."
        x-nullable: true
      severity:
        type: "string"
        description: "If the vulnerability is high than severity defined here, the\
          \ images can't be pulled. The valid values are \"none\", \"low\", \"medium\"\
          , \"high\", \"critical\"."
        x-nullable: true
      auto_scan:
        type: "string"
        description: "Whether scan images automatically when pushing. The valid values\
          \ are \"true\", \"false\"."
        x-nullable: true
      reuse_sys_cve_allowlist:
        type: "string"
        description: "Whether this project reuse the system level CVE allowlist as\
          \ the allowlist of its own.  The valid values are \"true\", \"false\". If\
          \ it is set to \"true\" the actual allowlist associate with this project,\
          \ if any, will be ignored."
        x-nullable: true
      retention_id:
        type: "string"
        description: "The ID of the tag retention policy for the project"
        x-nullable: true
    example:
      severity: "severity"
      prevent_vul: "prevent_vul"
      retention_id: "retention_id"
      reuse_sys_cve_allowlist: "reuse_sys_cve_allowlist"
      public: "public"
      auto_scan: "auto_scan"
      enable_content_trust: "enable_content_trust"
  ProjectSummary:
    type: "object"
    properties:
      repo_count:
        type: "integer"
        description: "The number of the repositories under this project."
      chart_count:
        type: "integer"
        description: "The total number of charts under this project."
      project_admin_count:
        type: "integer"
        description: "The total number of project admin members."
      maintainer_count:
        type: "integer"
        description: "The total number of maintainer members."
      developer_count:
        type: "integer"
        description: "The total number of developer members."
      guest_count:
        type: "integer"
        description: "The total number of guest members."
      limited_guest_count:
        type: "integer"
        description: "The total number of limited guest members."
      quota:
        $ref: "#/definitions/ProjectSummary_quota"
      registry:
        $ref: "#/definitions/Registry"
    example:
      registry:
        creation_time: "creation_time"
        update_time: "update_time"
        credential:
          access_key: "access_key"
          access_secret: "access_secret"
          type: "type"
        name: "name"
        insecure: true
        description: "description"
        id: 9
        type: "type"
        url: "url"
        status: "status"
      quota:
        hard: {}
      maintainer_count: 5
      guest_count: 2
      limited_guest_count: 7
      developer_count: 5
      repo_count: 0
      project_admin_count: 1
      chart_count: 6
  CVEAllowlist:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "ID of the allowlist"
      project_id:
        type: "integer"
        description: "ID of the project which the allowlist belongs to.  For system\
          \ level allowlist this attribute is zero."
      expires_at:
        type: "integer"
        description: "the time for expiration of the allowlist, in the form of seconds\
          \ since epoch.  This is an optional attribute, if it's not set the CVE allowlist\
          \ does not expire."
        x-nullable: true
      items:
        type: "array"
        items:
          $ref: "#/definitions/CVEAllowlistItem"
      creation_time:
        type: "string"
        format: "date-time"
        description: "The creation time of the allowlist."
      update_time:
        type: "string"
        format: "date-time"
        description: "The update time of the allowlist."
    description: "The CVE Allowlist for system or project"
    example:
      creation_time: "2000-01-23T04:56:07.000+00:00"
      update_time: "2000-01-23T04:56:07.000+00:00"
      expires_at: 2
      project_id: 3
      id: 9
      items:
      - cve_id: "cve_id"
      - cve_id: "cve_id"
  CVEAllowlistItem:
    type: "object"
    properties:
      cve_id:
        type: "string"
        description: "The ID of the CVE, such as \"CVE-2019-10164\""
    description: "The item in CVE allowlist"
    example:
      cve_id: "cve_id"
  RegistryCredential:
    type: "object"
    properties:
      type:
        type: "string"
        description: "Credential type, such as 'basic', 'oauth'."
      access_key:
        type: "string"
        description: "Access key, e.g. user name when credential type is 'basic'."
      access_secret:
        type: "string"
        description: "Access secret, e.g. password when credential type is 'basic'."
    example:
      access_key: "access_key"
      access_secret: "access_secret"
      type: "type"
  Registry:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "The registry ID."
      url:
        type: "string"
        description: "The registry URL string."
      name:
        type: "string"
        description: "The registry name."
      credential:
        $ref: "#/definitions/RegistryCredential"
      type:
        type: "string"
        description: "Type of the registry, e.g. 'harbor'."
      insecure:
        type: "boolean"
        description: "Whether or not the certificate will be verified when Harbor\
          \ tries to access the server."
      description:
        type: "string"
        description: "Description of the registry."
      status:
        type: "string"
        description: "Health status of the registry."
      creation_time:
        type: "string"
        description: "The create time of the policy."
      update_time:
        type: "string"
        description: "The update time of the policy."
    example:
      creation_time: "creation_time"
      update_time: "update_time"
      credential:
        access_key: "access_key"
        access_secret: "access_secret"
        type: "type"
      name: "name"
      insecure: true
      description: "description"
      id: 9
      type: "type"
      url: "url"
      status: "status"
  ResourceList:
    type: "object"
    additionalProperties:
      type: "integer"
      format: "int64"
  ProjectSummary_quota:
    type: "object"
    properties:
      hard:
        description: "The hard limits of the quota"
        $ref: "#/definitions/ResourceList"
      used:
        description: "The used status of the quota"
        $ref: "#/definitions/ResourceList"
    example:
      hard: {}
parameters:
  query:
    name: "q"
    in: "query"
    description: "Query string to query resources. Supported query patterns are \"\
      exact match(k=v)\", \"fuzzy match(k=~v)\", \"range(k=[min~max])\", \"list with\
      \ union releationship(k={v1 v2 v3})\" and \"list with intersetion relationship(k=(v1\
      \ v2 v3))\". The value of range and list can be string(enclosed by \" or '),\
      \ integer or time(in format \"2020-04-09 02:36:00\"). All of these query patterns\
      \ should be put in the query string \"q=xxx\" and splitted by \",\". e.g. q=k1=v1,k2=~v2,k3=[min~max]"
    required: false
    type: "string"
    x-exportParamName: "Q"
    x-optionalDataType: "String"
  requestId:
    name: "X-Request-Id"
    in: "header"
    description: "An unique ID for the request"
    required: false
    type: "string"
    minLength: 1
    x-exportParamName: "XRequestId"
    x-optionalDataType: "String"
  projectName:
    name: "project_name"
    in: "path"
    description: "The name of the project"
    required: true
    type: "string"
    x-exportParamName: "ProjectName"
  projectId:
    name: "project_id"
    in: "path"
    description: "The ID of the project"
    required: true
    type: "integer"
    format: "int64"
    x-exportParamName: "ProjectId"
  repositoryName:
    name: "repository_name"
    in: "path"
    description: "The name of the repository. If it contains slash, encode it with\
      \ URL encoding. e.g. a/b -> a%252Fb"
    required: true
    type: "string"
    x-exportParamName: "RepositoryName"
  reference:
    name: "reference"
    in: "path"
    description: "The reference of the artifact, can be digest or tag"
    required: true
    type: "string"
    x-exportParamName: "Reference"
  digest:
    name: "digest"
    in: "path"
    description: "The digest of the resource"
    required: true
    type: "string"
    x-exportParamName: "Digest"
  tagName:
    name: "tag_name"
    in: "path"
    description: "The name of the tag"
    required: true
    type: "string"
    x-exportParamName: "TagName"
  page:
    name: "page"
    in: "query"
    description: "The page number"
    required: false
    type: "integer"
    default: 1
    format: "int64"
    x-exportParamName: "Page"
    x-optionalDataType: "Int64"
  pageSize:
    name: "page_size"
    in: "query"
    description: "The size of per page"
    required: false
    type: "integer"
    default: 10
    maximum: 100
    format: "int64"
    x-exportParamName: "PageSize"
    x-optionalDataType: "Int64"
  instanceName:
    name: "preheat_instance_name"
    in: "path"
    description: "Instance Name"
    required: true
    type: "string"
    x-exportParamName: "PreheatInstanceName"
  preheatPolicyName:
    name: "preheat_policy_name"
    in: "path"
    description: "Preheat Policy Name"
    required: true
    type: "string"
    x-exportParamName: "PreheatPolicyName"
  executionId:
    name: "execution_id"
    in: "path"
    description: "Execution ID"
    required: true
    type: "integer"
    x-exportParamName: "ExecutionId"
  taskId:
    name: "task_id"
    in: "path"
    description: "Task ID"
    required: true
    type: "integer"
    x-exportParamName: "TaskId"
responses:
  "200":
    description: "Success"
    headers:
      X-Request-Id:
        type: "string"
        description: "The ID of the corresponding request for the response"
  "201":
    description: "Created"
    headers:
      X-Request-Id:
        type: "string"
        description: "The ID of the corresponding request for the response"
      Location:
        type: "string"
        description: "The location of the resource"
  "202":
    description: "Accepted"
    headers:
      X-Request-Id:
        type: "string"
        description: "The ID of the corresponding request for the response"
  "400":
    description: "Bad request"
    headers:
      X-Request-Id:
        type: "string"
        description: "The ID of the corresponding request for the response"
    schema:
      $ref: "#/definitions/Errors"
  "401":
    description: "Unauthorized"
    headers:
      X-Request-Id:
        type: "string"
        description: "The ID of the corresponding request for the response"
    schema:
      $ref: "#/definitions/Errors"
  "403":
    description: "Forbidden"
    headers:
      X-Request-Id:
        type: "string"
        description: "The ID of the corresponding request for the response"
    schema:
      $ref: "#/definitions/Errors"
  "404":
    description: "Not found"
    headers:
      X-Request-Id:
        type: "string"
        description: "The ID of the corresponding request for the response"
    schema:
      $ref: "#/definitions/Errors"
  "405":
    description: "Method not allowed"
    headers:
      X-Request-Id:
        type: "string"
        description: "The ID of the corresponding request for the response"
    schema:
      $ref: "#/definitions/Errors"
  "409":
    description: "Conflict"
    headers:
      X-Request-Id:
        type: "string"
        description: "The ID of the corresponding request for the response"
    schema:
      $ref: "#/definitions/Errors"
  "412":
    description: "Precondition failed"
    headers:
      X-Request-Id:
        type: "string"
        description: "The ID of the corresponding request for the response"
    schema:
      $ref: "#/definitions/Errors"
  "500":
    description: "Internal server error"
    headers:
      X-Request-Id:
        type: "string"
        description: "The ID of the corresponding request for the response"
    schema:
      $ref: "#/definitions/Errors"
